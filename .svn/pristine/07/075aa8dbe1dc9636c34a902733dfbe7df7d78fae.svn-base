package com.phone.safe.api.action;


import java.math.BigInteger;
import java.security.MessageDigest;
import java.util.Date;

import com.opensymphony.xwork2.Action;
import com.phone.safe.JDBC.JDBCTools;
import com.phone.safe.JavaBeans.User;


public class loginAction{
	private User user;	//用户对象
	private int flag;
	private String msg;
	private String token;//返回口令
	 

	public String execute() {
		if(user !=null) {
			int code = JDBCTools.login(user.getUser_num(), user.getUser_psw());
			if(code == 1) {
				this.flag =1;
				this.msg ="登录成功!";
				this.token = getMD5(user.getUser_num() + new Date().getTime());
				JDBCTools.inserToken(user.getUser_num(), this.token);
			}
			else {
				this.flag =0;
				this.msg ="登录失败,可能是已经登录或者验证码错误!";
				this.token = "null";
			}
		}
		else {
			this.flag =0;
			this.msg ="登录失败,可能是已经登录或者验证码错误!";
			this.token = "null";
		}
		
		
		
		
		return Action.SUCCESS;
	}
	//setter,getter方法
	public User getUser() {
		return user;
	} 
	public void setUser(User user) {
		this.user = user;
	}
	public String getToken() {
		return token;
	}
	public String getMsg() {
		return msg;
	}
	public void setMsg(String msg) {
		this.msg = msg;
	}
	public int getFlag() {
		return flag;
	}
	public void setFlag(int flag) {
		this.flag = flag;
	}
    /** 
    * 对字符串md5加密(小写+字母) 
    * 
    * @param str 传入要加密的字符串 
    * @return  MD5加密后的字符串 
    */  
   public static String getMD5(String str) {  
       try {  
           // 生成一个MD5加密计算摘要  
           MessageDigest md = MessageDigest.getInstance("MD5");  
           // 计算md5函数  
           md.update(str.getBytes());  
           // digest()最后确定返回md5 hash值，返回值为8为字符串。因为md5 hash值是16位的hex值，实际上就是8位的字符  
           // BigInteger函数则将8位的字符串转换成16位hex值，用字符串来表示；得到字符串形式的hash值  
           return new BigInteger(1, md.digest()).toString(16);  
       } catch (Exception e) {  
          e.printStackTrace();  
          return null;  
       }  
   } 

}
